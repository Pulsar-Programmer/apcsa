The goal of the project is to solve the Tower of Hanoi problem and demonstrate all the
moves it’ll take to solve it.

The Towers class will have 3 ArrayLists (left, middle and right) of Integers representing the
the 3 pegs for the Tower of Hanoi problem. Default Tower is 5 rings.
====> I want 3 Tower. Can I do this?

The Driver class will ask the user to set up a tower of Hanoi and will give the option to either
have the user try to solve it themselves or demonstrate the solving of it showing each move
and the state of the board right after the move making sure to be re-runnable. MAKE THIS
LOOK GOOD. Represent the 3 array lists vertically eg.
2
1 3 6
5 4 7
¯ ¯ ¯

Other than the standard getters, setters, toString, constructors you will need to create the
methods. (Note: Make sure toString clearly draws the board)
int getCount() – returns how many rings are on all 3 pegs
void reset() - restacks the tower of Hanoi to the first peg
void setTower(int rings) stacks the left peg with the number of rings // this clears all towers then does with_num
boolean isSolved() checks to see if all the pegs are on the right peg
boolean makeMove(int one, int two) (the pegs are 0, 1 and 2 for left, middle, right)

DON’T FORGET THE 2 CONSTRUCTORS AND GETTERS AND SETTERS
Note: Wikipedia has strategy to solve it